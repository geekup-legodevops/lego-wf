name: Appsmith Deployment testing Workflow

on:
  # This line enables manual triggering of this workflow.
  workflow_dispatch:

  push:
    branches: [feature/test-self-hosted-installation-script-testing]
# Change the working directory for all the jobs in this workflow
defaults:
  run:
    working-directory: app
jobs:
  test-install-sh-script:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_KEY_PAIR_NAME: ${{ secrets.AWS_KEY_PAIR_NAME }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    steps:
        # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2
      - name: prepare-test-environment
        run: |
          echo "Deploying to production server"
          cd $GITHUB_WORKSPACE/deploy/test-scripts/docker-compose
          pwd
          ls -la
          chmod +x $GITHUB_WORKSPACE/deploy/test-scripts/docker-compose/pre-run.sh
          $GITHUB_WORKSPACE/deploy/test-scripts/docker-compose/pre-run.sh
      - name: run-test
        if: ${{ always() }}
        run: |
          cd $GITHUB_WORKSPACE/deploy/test-scripts/docker-compose
          ./run-test.sh
      - name: clean-up-environment-after-test
        if: ${{ always() }} 
        run: |
          cd $GITHUB_WORKSPACE/deploy/test-scripts/docker-compose
          ./after-run.sh